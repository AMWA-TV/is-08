#%RAML 1.0

# AMWA NMOS Audo Channel Mapping Specification: Channel Mapping API
# (c) AMWA 2018

title: Mapping
baseUri: http://example.api.com/x-nmos/channelmapping/{version}
version: v1.0
mediaType: application/json

documentation:
  - title: Overview
    content: |
        Audo channel mapping blurb        
/:
  displayName: Base
  get:
    responses:
      200:
        body:
          example: !include ../examples/base-get-200.json
/io:
  displayName: Input/Output information
  get:
    responses: 
      200:
        body:
          example: !include ../examples/io-get-200.json
          type: !include schemas/io-response-schema.json
            
/map:
  displayName: Map entity root
  get:
    responses:
      200:
        body:
          example: !include ../examples/map/map-root-get-200.json
  /staged:
    displayName: Staged mapping table
    get:
      responses:
        200:
          body:
            example: !include ../examples/map/map-tables-get-200.json
            type: !include schemas/map-tables-response-schema.json
    patch:
      body:
        example: !include ../examples/map/map-staged-patch-activate-immediate.json
        type: !include schemas/map-tables-request-schema.json
      responses: 
        200:
          body:
            example: !include ../examples/map/map-staged-patch-200.json
            type: !include schemas/map-tables-response-schema.json
        400:
          body:
            type: !include schemas/error.json
            example: !include ../examples/map/map-tables-patch-400.json
        500:
          body:
            type: !include schemas/error.json
            example: !include ../examples/map/map-tables-patch-500.json
        404:
          description: Returned when the requested resource does not exist
  /active:
    displayName: Active mapping resource
    get:
      responses:
        200:
          body:
            example: !include ../examples/map/map-tables-get-200.json
            type: !include schemas/map-tables-response-schema.json
/inputs:
  displayName: Inputs
  get:
    description: List all inputs available
    responses:
      200:
        body:
          example: !include ../examples/inputs/inputs-root-get-200.json
  /{inputName}:
    get:
      responses:
        200:
          body:
            example: !include ../examples/inputs/input-name-root-get-200.json
        404:
          description: Returned when an the input name does not exist
    /params:
      get:
        responses:
          200:
            body:
              example: !include ../examples/inputs/input-name-params-get-200.json
              type: !include schemas/input-params-response-schema.json
          404:
            description: Returned when the requested resource does not exist
      patch:
        body:
          example: !include ../examples/inputs/input-name-params-patch.json
          type: !include schemas/input-params-request-schema.json
        responses:
          200:
            body:
              example: !include ../examples/inputs/input-name-params-patch-200.json
              type: !include schemas/input-params-response-schema.json
          400:
            body:
              type: !include schemas/error.json
              example: !include ../examples/inputs/input-name-params-patch-400.json
          500:
            body:
              type: !include schemas/error.json
              example: !include ../examples/inputs/input-name-params-patch-500.json
          404:
            description: Returned when the requested resource does not exist
    /caps:
      get:
        responses:
          200:
            body:
              example: !include ../examples/inputs/input-name-caps-200.json
              type: !include schemas/input-caps-response-schema.json
          404:
            description: Returned when the requested resource does not exist
    /receiverID:
      get:
        responses:
          200:
            body: 
              example: !include ../examples/inputs/input-name-receiverID-get-200.json
              type: !include schemas/input-receiverID-response-schema.json
          404:
            description: Returned when the requested resource does not exist
    /channels:
      get:
        responses: 
          200:
            body: 
              example: !include ../examples/inputs/input-name-channels-get-200.json
              type: !include schemas/input-channels-request-schema.json
          404:
            description: Returned when the requested resource does not exist
/outputs:
  displayName: Outputs
  get:
    description: List all outputs available
    responses: 
      200:
        body:
          example: !include ../examples/outputs/output-root-get-200.json
      404:
        description: Returned when the requested resource does not exist
  /{outputName}:
    get:
      responses:
        200:
          body:
            example: !include ../examples/outputs/output-name-root-get-200.json
        404:
          description: Returned when the requested resource does not exist
    /params:
      get:
        responses: 
          200:
            body:
              example: !include ../examples/outputs/output-name-params-get-200.json
              type: !include schemas/output-params-response-schema.json
          404:
            description: Returned when the requested resource does not exist
      patch:
        body:
          example: !include ../examples/outputs/output-name-params-patch.json
          type: !include schemas/output-params-request-schema.json
        responses: 
          200:
            body:
              example: !include ../examples/outputs/output-name-params-patch-200.json
              type: !include schemas/output-params-response-schema.json
          400:
            body:
              type: !include schemas/error.json
              example: !include ../examples/outputs/output-name-params-patch-400.json
          404:
            description: Returned when the requested resource does not exist
          500:
            body:
              type: !include schemas/error.json
              example: !include ../examples/outputs/output-name-params-patch-500.json
    /caps:
      get:
        responses: 
          200:
            body:
              example: !include ../examples/outputs/output-name-caps-get-200.json
              type: !include schemas/output-caps-response-schema.json
          404:
            description: Returned when the requested resource does not exist
    /sourceID:
      get:
        responses: 
          200:
            body:
              example: !include ../examples/outputs/output-name-sourceid-get-200.json
              type: !include schemas/output-sourceID-response-schema.json
          404:
            description: Returned when the requested resource does not exist
    /channels:
      get:
        responses:
          200:
            body:
              example: !include ../examples/outputs/output-name-channels-get-200.json
              type: !include schemas/output-channels-request-schema.json
          404:
            description: Returned when the requested resource does not exist